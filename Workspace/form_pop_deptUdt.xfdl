<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form_pop_po" width="300" height="400" titletext="New Form" onload="form_pop_po_onload">
    <Layouts>
      <Layout height="400" width="300">
        <Button id="btnAdd" taborder="0" text="저장" left="40" width="65" height="29" onclick="fn_udt" bottom="10"/>
        <Button id="btnClose" taborder="1" text="닫기" left="115" width="65" height="29" bottom="10" onclick="btnClose_onclick"/>
        <Static id="Static01" taborder="2" text="." visible="false" left="-1" right="0" height="10" bottom="0" background="rgba(251,123,123,0.47843137254901963)"/>
        <Static id="Static01_00" taborder="3" text="." visible="false" left="0" right="0" height="10" background="rgba(251,123,123,0.47843137254901963)" top="0"/>
        <Static id="Static04" taborder="4" cssclass="sta_WF_Labelbg" left="2" top="36" right="0" height="37" text=""/>
        <Static id="sta_dept_name" taborder="5" text="부서명" cssclass="sta_WF_Label_P" left="0" top="36" width="70" height="37" wordWrap="english"/>
        <Edit id="edt_dept_name" taborder="6" left="80" top="43" height="23" right="10"/>
        <Static id="Static37_00" taborder="7" cssclass="sta_WF_title01" left="2" top="0" height="37" text="부서 정보 입력" width="110"/>
        <Static id="Static04_00" taborder="8" cssclass="sta_WF_Labelbg" left="0" top="72" right="0" height="37" text=""/>
        <Static id="sta_dept_name00" taborder="9" text="상위부서" cssclass="sta_WF_Label_P" left="0" top="72" width="70" height="37" wordWrap="english"/>
        <CheckBox id="chb_isTop" taborder="10" text="상위부서 없음" left="sta_dept_name00:10" top="Static04:10" height="17" right="23" onchanged="chb_isTop_onchanged" falsevalue="false" truevalue="true"/>
        <Static id="Static37_00_00" taborder="11" cssclass="sta_WF_title01" left="0" top="Static04_00:0" height="37" text="상위부서 선택" width="110"/>
        <Grid id="grd_tree" taborder="12" left="0" top="Static37_00_00:0" binddataset="ds_stDepartment" autofittype="col" bottom="btnAdd:5" right="0" treeusecheckbox="false" treeinitstatus="expand,all" oncellposchanged="grd_tree_oncellclick">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row size="24"/>
              </Rows>
              <Band id="body">
                <Cell text="bind:dept_name" displaytype="treeitemcontrol" edittype="tree" treelevel="bind:dept_level" treestartlevel="1"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btnDel" taborder="13" text="삭제" left="190" width="65" height="29" bottom="10" onclick="btnDel_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_dept_udt">
        <ColumnInfo>
          <Column id="dept_code" type="INT" size="256"/>
          <Column id="dept_name" type="STRING" size="256"/>
          <Column id="dept_dir_id" type="INT" size="256"/>
          <Column id="dept_level" type="INT" size="256"/>
          <Column id="dept_code_parent" type="INT" size="256"/>
          <Column id="dept_tree_code" type="STRING" size="256"/>
          <Column id="dept_memcount" type="INT" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_stDepartment">
        <ColumnInfo>
          <Column id="dept_code" type="INT" size="256"/>
          <Column id="dept_name" type="STRING" size="256"/>
          <Column id="dept_dir_id" type="INT" size="256"/>
          <Column id="dept_level" type="INT" size="256"/>
          <Column id="dept_code_parent" type="STRING" size="256"/>
          <Column id="dept_tree_code" type="STRING" size="256"/>
          <Column id="dept_mem_count" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_stMember">
        <ColumnInfo>
          <Column id="id" type="STRING" size="256"/>
          <Column id="password" type="STRING" size="256"/>
          <Column id="name" type="STRING" size="256"/>
          <Column id="birth" type="DATE" size="256"/>
          <Column id="gender" type="STRING" size="256"/>
          <Column id="contact" type="STRING" size="256"/>
          <Column id="address1" type="STRING" size="256"/>
          <Column id="address2" type="STRING" size="256"/>
          <Column id="zip_code" type="STRING" size="256"/>
          <Column id="is_married" type="STRING" size="256"/>
          <Column id="dept_code" type="INT" size="256"/>
          <Column id="position_code" type="INT" size="256"/>
          <Column id="reg_date" type="DATE" size="256"/>
          <Column id="retire_date" type="DATE" size="256"/>
          <Column id="access_level_code" type="INT" size="256"/>
          <Column id="break_total_count" type="FLOAT" size="256"/>
          <Column id="break_use_count" type="FLOAT" size="256"/>
          <Column id="dept_name" type="STRING" size="256"/>
          <Column id="position_name" type="STRING" size="256"/>
          <Column id="dept_level" type="INT" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[
this.selectedRowInx = '';

//처음 로딩되었을 때 parent에서 보내준 param들을 setting한다. 
this.form_pop_po_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	//이 form에 따로 생성한 ds에 member table 받기
	this.transaction(
		"loading","/nex/loadMemList.nexacro","","ds_stMember=ds_out","","fn_callback");
		
	var p = this.parent
	
	//popup창의 ds_stDepartment에 gds_stDepartment의 값을 그대로 복붙한다. 
	nexacro.getApplication().gds_stDepartment.filter("");
	var nRowCnt = this.ds_stDepartment.assign(nexacro.getApplication().gds_stDepartment);
	
	if(this.parent.dept_level==1){
		//최상위 부서라면 '상위부서 없음'에 클릭시켜놓는다.
		this.chb_isTop.set_value(true);
		this.grd_tree.set_enable(false);
		
		//ds에도 같은 값을 설정한다. 
		this.ds_dept_udt.setColumn(0,"dept_level",1);
		
	}else{
		//만약 하위부서였으면 하단의 tree에 해당 상위부서를 클릭해둔다.
		this.chb_isTop.set_value(false);
		this.grd_tree.set_enable(true);
		//선택할 row의 index를 가져옴
		var rInx = this.ds_stDepartment.findRow("dept_code",this.parent.dept_code_parent);
		this.grd_tree.selectRow(rInx);//선택
		
		//ds에 값 설정
		this.ds_dept_udt.setColumn(0,"dept_level",this.parent.dept_level);
	}
	this.ds_dept_udt.setColumn(0,"dept_name",this.parent.dept_name);
	this.ds_dept_udt.setColumn(0,"dept_code",this.parent.dept_code);
	this.ds_dept_udt.setColumn(0,"dept_code_parent",this.parent.dept_code_parent);

	//하위부서 선택 창에 현재 수정중인 부서는 안보이게 한다. 
	//하위부서 선택 창에 level이 2인 부서는 보이지 않게 한다. 
	this.ds_stDepartment.filter('dept_level<=1 && dept_code!='+this.parent.dept_code);
};


this.fn_udt = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	var sName = this.edt_dept_name.value;
	var sLevel = 1;//top일경우 level은 1로 설정된다. 
	var sTreeCode = this.parent.dept_tree_code;
	
	if(this.chb_isTop.value=='false'){
		sParentCode = this.ds_stDepartment.getColumn(this.selectedRowInx, "dept_code");
		//상위부서가 있다면 해당 부서의 code와 level+1한 값을 넘겨줌. 
		sLevel = (this.ds_stDepartment.getColumn(this.selectedRowInx, "dept_level")+1);//부모 level의 +1
		//부모코드 설정
		this.ds_dept_udt.setColumn(0,"dept_code_parent",sParentCode);
		
		//tree_code설정
		var pTree = this.ds_stDepartment.getColumn(this.selectedRowInx, "dept_tree_code");
		sTreeCode = pTree+"_"+this.parent.dept_code;
	}

	this.ds_dept_udt.setColumn(0,"dept_name",sName);
	this.ds_dept_udt.setColumn(0,"dept_level",sLevel);
	this.ds_dept_udt.setColumn(0,"dept_tree_code",sTreeCode);

	var ans = confirm("수정하시겠습니까?");
	if(!ans){return;}
	//server로 보냄.
	this.transaction(
		"nxDeptUdt", //transaction id
		"/nex/nxDeptUdt.nexacro", //url(to controller)
		"ds_in=ds_dept_udt:A", // in data set
		"", // out data set
		"", // variable send
		"fn_udt_callback" //callback function
	);

};


this.fn_udt_callback  =  function(strSvcID, nErrorCode, strErrorMag)
{
	trace("callback된 transaction명 : "+strSvcID);
	trace("ErrorCode : "+nErrorCode);
	trace("에러 메세지 : "+strErrorMag);
	if(nErrorCode>-1){this.close();}else{alert("정보를 수정하지 못하였습니다.");return;}
	alert("부서를 수정하였습니다.");
	this.close();
};

this.fn_callback = function (id, ErrorCode, ErrorMsg)
{
	trace(id);
	trace(ErrorCode);
	trace(ErrorMsg);
};

//상위부서 없음을 클릭했을 때
this.chb_isTop_onchanged = function(obj:nexacro.CheckBox,e:nexacro.CheckBoxChangedEventInfo)
{
	if(obj.value){
		//상위부서가 없다.
		this.grd_tree.set_enable(true);
	}else{
		//상위부서가 있다.
		this.grd_tree.set_enable(false);

	}
};

this.grd_tree_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	//변수에 선택된 row의 index값 저장
	this.selectedRowInx = e.row;
	

};

this.btnClose_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.close();
};

this.btnDel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	var totalMem = 0;
	var colInx = this.ds_stMember.addColumn("dept_tree_code","string");
	//member테이블에 dept_tree_code넣기
	for(var i=0; i<this.ds_stMember.rowcount;i++){
			var dept = this.ds_stMember.getColumn(i,"dept_code");
			
			//상위부서 선택 창에 내 부서는 안보이도록 filter해놓아서 getColumn으로 내 부서는 보이지 않아 error발생. 
			if(dept==this.parent.dept_code){
				alert("해당 부서에 사원이 존재하여 해당 부서를 삭제할 수 없습니다."); return;
			}
			
			var tree = this.ds_stDepartment.lookup("dept_code",dept,"dept_tree_code");
			var res = this.ds_stMember.setColumn(i,"dept_tree_code",tree);
	}
	for(var i=0; i<this.ds_stMember.rowcount;i++){
		var text = this.ds_stMember.getColumn(i,"dept_tree_code");
		var inx = text.indexOf(this.parent.dept_tree_code);
		if(inx!=-1){
			totalMem++;
		}
	}
	
	if(totalMem!=0){alert("해당 부서 및 하위부서에 사원이 존재하여 해당 부서를 삭제할 수 없습니다."); return;}
	
	var ans = confirm(this.parent.dept_name+"부서를 정말로 삭제하시겠습니까?");
	//거절이라면 그대로 popup창으로 돌아감.
	if (!ans){return;}
	//동의하였다면 transaction으로 삭제
	this.transaction(
		"nxDeptDel", //transaction id
		"/nex/nxDeptDel.nexacro", //url(to controller)
		"", // in data set
		"", // out data set
		"dept_code="+this.parent.dept_code, // variable send
		"fn_del_callback" //callback function
	);
};
this.fn_del_callback  =  function(strSvcID, nErrorCode, strErrorMag)
{
	trace("callback된 transaction명 : "+strSvcID);
	trace("ErrorCode : "+nErrorCode);
	trace("에러 메세지 : "+strErrorMag);
	if(nErrorCode>-1){this.close();}else{alert("삭제하지 못하였습니다.");return;}
	alert("부서를 삭제하였습니다.");
	this.close();
};
]]></Script>
    <Bind>
      <BindItem id="item0" compid="edt_dept_name" propid="value" datasetid="ds_dept_udt" columnid="dept_name"/>
    </Bind>
  </Form>
</FDL>
